var axios = require('axios');
var spin = require('spinnies');
var Crypto = require('crypto');
var figlet = require('figlet');
var fs = require("fs");
var moment = require("moment-timezone");

const { 
 color, 
 bgcolor,
 brightcolor
} = require("./color");

const wait = async (media) => new Promise(async (resolve, reject) => {
const attachmentData = `data:image/jpeg;base64,${media.toString('base64')}`
const response = await fetch("https://trace.moe/api/search",{method: "POST",body: JSON.stringify({ image: attachmentData }),headers: { "Content-Type": "application/json" }});
if (!response.ok) reject(`Gambar tidak ditemukan!`);
const result = await response.json()
try {
	const { is_adult, title, title_chinese, title_romaji, title_english, episode, season, similarity, filename, at, tokenthumb, anilist_id } = result.docs[0]
	let belief = () => similarity < 0.89 ? "Saya memiliki keyakinan rendah dalam hal ini : " : ""
	let ecch = () => is_adult ? "Iya" : "Tidak"
	resolve({video: await getBuffer(`https://media.trace.moe/video/${anilist_id}/${encodeURIComponent(filename)}?t=${at}&token=${tokenthumb}`), teks: `${belief()}
~> Ecchi : *${ecch()}*
~> Judul Jepang : *${title}*
~> Ejaan Judul : *${title_romaji}*
~> Judul Inggris : *${title_english}*
~> Episode : *${episode}*
~> Season: *${season}*`});
	} catch (e) {
console.log(e)
reject(`Saya tidak tau ini anime apa`)
	}
})


const h2k = (number) => {
var SI_POSTFIXES = ["", " K", " M", " G", " T", " P", " E"]
var tier = Math.log10(Math.abs(number)) / 3 | 0
if(tier == 0) return number
var postfix = SI_POSTFIXES[tier]
var scale = Math.pow(10, tier * 3)
var scaled = number / scale
var formatted = scaled.toFixed(1) + ''
if (/\.0$/.test(formatted))
formatted = formatted.substr(0, formatted.length - 2)
return formatted + postfix
}

const getBuffer = async (url, options) => {
	try {
options ? options : {}
const res = await axios({
	method: "get",
	url,
	headers: {
'DNT': 1,
'Upgrade-Insecure-Request': 1
	},
	...options,
	responseType: 'arraybuffer'
})
return res.data
	} catch (e) {
console.log(`Error : ${e}`)
	}
}

const getGroupAdmins = (participants) => {
	admins = []
	for (let i of participants) {
i.isAdmin ? admins.push(i.jid) : ''
	}
	return admins
}

const getRandom = (ext) => {
	return `${Math.floor(Math.random() * 10000)}${ext}`
}

const isUrl = (url) => {
return url.match(new RegExp(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/, 'gi'))
}

const math = (teks) => {
return Math.floor(teks)
}

const sleep = async (ms) => {
    return new Promise(resolve => setTimeout(resolve, ms));
}

const time = moment.tz('Asia/Jakarta').format('DD/MM/YYYY HH:mm')

// Pembuat Random
const randomBytes = (length) => {
return Crypto.randomBytes(length)
}
const generateMessageID = () => {
return randomBytes(10).toString('hex').toUpperCase()
}

// Console.log Bergerak
const spinner = { 
  "interval": 120,
  "frames": [
    "",
    "𝗕",
    "𝗕𝗬",
    "𝗕𝗬 ",
    "𝗕𝗬 ∶",
    "𝗕𝗬 ∶ ",
    "𝗕𝗬 ∶ メ",
    "𝗕𝗬 ∶ メ𝗟",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 ",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜 ",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
            "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
            "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽...",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽..",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽.",
    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵𒉽",
        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍⁴̵",
            "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅⁰͍",
                "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ⁴̅",
                    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜  ",
                        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜 ",
                            "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙𝗜",
                                "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜𝗙",
                                    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥𝗜",
                                        "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔𝗥",
                                            "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 𝗔",
                                                "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗 ",
                                                    "𝗕𝗬 ∶ メ𝗟𝗢𝗥𝗗",
                                                        "𝗕𝗬 ∶ メ𝗟𝗢𝗥",
                                                            "𝗕𝗬 ∶ メ𝗟",
                                                                "𝗕𝗬 ∶ メ",
                                                                    "𝗕𝗬 ∶ ",
                                                                        "𝗕𝗬 ∶",
                                                                            "𝗕𝗬 ",
                                                                                "𝗕𝗬",
                                                                                    "𝗕",
                                                                                        ""
  ]}
let globalSpinner;
var getGlobalSpinner = (disableSpins = false) => {
  if(!globalSpinner) globalSpinner = new spin({ color: 'blue', succeedColor: 'green', spinner, disableSpins});
  return globalSpinner;
}
spins = getGlobalSpinner(false)

// Paket Spin
const start = (id, text) => {
	spins.add(id, {text: text})
	}
const info = (id, text) => {
	spins.update(id, {text: text})
}
const success = (id, text) => {
	spins.succeed(id, {text: text})
	}
const close = (id, text) => {
	spins.fail(id, {text: text})
}
     
module.exports = { 
 wait, 
 getBuffer, 
 h2k, 
 generateMessageID, 
 getGroupAdmins, 
 getRandom, 
 start, 
 info, 
 success, 
 close, 
 isUrl, 
 math,
 sleep,
 time
 }